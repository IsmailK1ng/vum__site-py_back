(function() {
    if (typeof django === 'undefined' || typeof django.jQuery === 'undefined') {
        setTimeout(arguments.callee, 50);
        return;
    }
    
    console.log('‚úÖ Admin JS –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    django.jQuery(document).ready(function() {
        var $ = django.jQuery;
        
        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–æ–ª–µ–π
        function updateFieldsForRow(row, selectedType) {
            console.log('–û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è —Ç–∏–ø–∞:', selectedType);
            console.log('–°—Ç—Ä–æ–∫–∞ –Ω–∞–π–¥–µ–Ω–∞:', row.length > 0 ? '–î–ê' : '–ù–ï–¢', row.attr('id'));
            
            var textTd = row.find('td.field-text');
            var imageTd = row.find('td.field-image');
            var youtubeTd = row.find('td.field-youtube_url');
            var videoTd = row.find('td.field-video_file');
            
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –µ—Å–ª–∏ –∫–ª–∞—Å—Å—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏
            if (!textTd.length) {
                // console.log('‚ö†Ô∏è TD —Å –∫–ª–∞—Å—Å–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—â–µ–º –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É');
                row.find('td').each(function() {
                    var td = $(this);
                    if (td.find('textarea[id*="-text"]').length) textTd = td;
                    if (td.find('input[type="file"][id*="-image"]').length) imageTd = td;
                    if (td.find('input[id*="-youtube_url"]').length) youtubeTd = td;
                    if (td.find('input[type="file"][id*="-video_file"]').length) videoTd = td;
                });
            }
            
            console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ TD —ç–ª–µ–º–µ–Ω—Ç—ã:', {
                text: textTd.length,
                image: imageTd.length,
                youtube: youtubeTd.length,
                video: videoTd.length
            });
            
            // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–æ–∫–∏
            if (!textTd.length && !imageTd.length) {
                // console.log('‚ö†Ô∏è TD —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–æ–∫–∏:');
                row.find('td').each(function(i) {
                    console.log(`  TD[${i}]: class="${$(this).attr('class')}" —Å–æ–¥–µ—Ä–∂–∏—Ç:`, 
                               $(this).find('input, textarea, select').attr('id') || '–¥—Ä—É–≥–æ–µ');
                });
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ
            textTd.css('display', '');
            imageTd.css('display', '');
            youtubeTd.css('display', '');
            videoTd.css('display', '');
            
            // –°–∫—Ä—ã–≤–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ
            switch(selectedType) {
                case 'text':
                case '–¢–µ–∫—Å—Ç':
                    // console.log('üî¥ –°–∫—Ä—ã–≤–∞–µ–º: image, youtube, video');
                    imageTd.css('display', 'none');
                    youtubeTd.css('display', 'none');
                    videoTd.css('display', 'none');
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã—Ç–æ
                    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä—ã—Ç–∏—è:', {
                        image: imageTd.is(':hidden'),
                        youtube: youtubeTd.is(':hidden'),
                        video: videoTd.is(':hidden')
                    });
                    break;
                case 'image':
                case '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ':
                    // console.log('üî¥ –°–∫—Ä—ã–≤–∞–µ–º: text, youtube, video');
                    textTd.css('display', 'none');
                    youtubeTd.css('display', 'none');
                    videoTd.css('display', 'none');
                    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä—ã—Ç–∏—è:', {
                        text: textTd.is(':hidden'),
                        youtube: youtubeTd.is(':hidden'),
                        video: videoTd.is(':hidden')
                    });
                    break;
                case 'youtube':
                case 'YouTube –≤–∏–¥–µ–æ':
                    // console.log('üî¥ –°–∫—Ä—ã–≤–∞–µ–º: text, image, video');
                    textTd.css('display', 'none');
                    imageTd.css('display', 'none');
                    videoTd.css('display', 'none');
                    break;
                case 'video':
                case '–í–∏–¥–µ–æ —Ñ–∞–π–ª':
                    // console.log('üî¥ –°–∫—Ä—ã–≤–∞–µ–º: text, image, youtube');
                    textTd.css('display', 'none');
                    imageTd.css('display', 'none');
                    youtubeTd.css('display', 'none');
                    break;
                default:
                    // console.log('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø:', selectedType);
            }
        }
        
        // –ú–∞–ø–ø–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è
        function textToValue(text) {
            var mapping = {
                '–¢–µ–∫—Å—Ç': 'text',
                '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ': 'image',
                'YouTube –≤–∏–¥–µ–æ': 'youtube',
                '–í–∏–¥–µ–æ —Ñ–∞–π–ª': 'video',
                '---------': '',
                '': ''
            };
            // console.log('–ú–∞–ø–ø–∏–Ω–≥:', text, '->', mapping[text] || text);
            return mapping[text] || text;
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç—Ä–æ–∫
        function initExistingRows() {
            $('select[id*="block_type"]').each(function() {
                var select = $(this);
                var row = select.closest('tr');
                if (!row.hasClass('empty-form')) {
                    updateFieldsForRow(row, select.val());
                }
            });
        }
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        initExistingRows();
        
        // –ì–õ–ê–í–ù–û–ï –†–ï–®–ï–ù–ò–ï - MutationObserver –¥–ª—è Select2 —Ç–µ–∫—Å—Ç–∞
        var observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                // –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç–∞ –≤ Select2
                if (mutation.type === 'childList' || mutation.type === 'characterData') {
                    var target = $(mutation.target);
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ Select2 selection —Ç–µ–∫—Å—Ç
                    if (target.hasClass('select2-selection__rendered') || 
                        target.closest('.select2-selection__rendered').length) {
                        
                        var rendered = target.hasClass('select2-selection__rendered') ? 
                                     target : target.closest('.select2-selection__rendered');
                        
                        var containerId = rendered.attr('id');
                        if (containerId && containerId.includes('blocks')) {
                            var selectedText = rendered.text().trim();
                            var selectedValue = textToValue(selectedText);
                            
                            // console.log('üìù Select2 —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è:', selectedText, '->', selectedValue);
                            
                            // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É - –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã
                            var selectId = containerId.replace('-container', '');
                            var select = $('#' + selectId);
                            // console.log('Select –Ω–∞–π–¥–µ–Ω:', select.length > 0, selectId);
                            
                            var row = select.closest('tr');
                            // console.log('Row —á–µ—Ä–µ–∑ select.closest:', row.length > 0);
                            
                            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–π—Ç–∏ row
                            if (!row.length) {
                                row = rendered.closest('tr');
                                // console.log('Row —á–µ—Ä–µ–∑ rendered.closest:', row.length > 0);
                            }
                            
                            if (row.length) {
                                updateFieldsForRow(row, selectedValue);
                                
                                // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º select
                                if (select.val() !== selectedValue) {
                                    select.val(selectedValue);
                                }
                            } else {
                                // console.log('‚ùå –°—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
                            }
                        }
                    }
                }
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫
                if (mutation.type === 'childList') {
                    mutation.addedNodes.forEach(function(node) {
                        if (node.nodeName === 'TR' && !$(node).hasClass('empty-form')) {
                            // console.log('üÜï –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
                            setTimeout(function() {
                                var select = $(node).find('select[id*="block_type"]');
                                if (select.length) {
                                    updateFieldsForRow($(node), select.val());
                                }
                            }, 500);
                        }
                    });
                }
            });
        });
        
        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
        observer.observe(document.body, {
            childList: true,
            subtree: true,
            characterData: true,
            characterDataOldValue: true
        });
        
        // console.log('üëÄ MutationObserver –∑–∞–ø—É—â–µ–Ω');
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞
        setInterval(function() {
            $('.select2-selection__rendered').each(function() {
                var rendered = $(this);
                var containerId = rendered.attr('id');
                
                if (containerId && containerId.includes('blocks')) {
                    var currentText = rendered.text().trim();
                    var lastText = rendered.data('last-text');
                    
                    if (currentText !== lastText) {
                        rendered.data('last-text', currentText);
                        var selectedValue = textToValue(currentText);
                        
                        // console.log('üîÑ –¢–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è:', currentText, '->', selectedValue);
                        
                        var selectId = containerId.replace('-container', '');
                        var select = $('#' + selectId);
                        var row = select.closest('tr');
                        
                        if (row.length) {
                            updateFieldsForRow(row, selectedValue);
                        }
                    }
                }
            });
        }, 300);
        
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        $(document).on('change select2:select', 'select[id*="block_type"]', function() {
            // console.log('üìå –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ');
            var row = $(this).closest('tr');
            updateFieldsForRow(row, $(this).val());
        });
        
        // console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    });
})();