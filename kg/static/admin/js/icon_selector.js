/**
 * –ê–¥–º–∏–Ω–∫–∞ FAW - –ü–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—à–∏–Ω–∞–º–∏
 * - –ê–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
 * - –í—ã–±–æ—Ä –∏–∫–æ–Ω–æ–∫ –¥–ª—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
 * - –í–∞–ª–∏–¥–∞—Ü–∏—è JSON
 */

(function() {
    'use strict';
    
    django.jQuery(document).ready(function($) {
        console.log('üöÄ FAW Admin Helper –∑–∞–≥—Ä—É–∂–µ–Ω');
        
        // ============================================
        // 1. –ê–í–¢–û–ü–ï–†–ï–í–û–î –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö
        // ============================================
        const translations = {
            '–î–∏–∑–µ–ª—å': { ky: '–î–∏–∑–µ–ª—å', en: 'Diesel' },
            '–ë–µ–Ω–∑–∏–Ω': { ky: '–ë–µ–Ω–∑–∏–Ω', en: 'Gasoline' },
            '–∫–≥': { ky: '–∫–≥', en: 'kg' },
            '–ª.—Å.': { ky: '–∞.–∫.', en: 'hp' },
            '–º¬≥': { ky: '–º¬≥', en: 'm¬≥' },
            '–º¬≤': { ky: '–º¬≤', en: 'm¬≤' },
            '–ö–ª–∏–º–∞—Ç-–∫–æ–Ω—Ç—Ä–æ–ª—å': { ky: '–ö–ª–∏–º–∞—Ç-–∫–æ–Ω—Ç—Ä–æ–ª—å', en: 'Climate control' },
            '4x2': { ky: '4x2', en: '4x2' },
            '4√ó2': { ky: '4√ó2', en: '4√ó2' },
            '4—Ö2': { ky: '4—Ö2', en: '4—Ö2' },
            '4x4': { ky: '4x4', en: '4x4' },
            '–ú–µ—Ö–∞–Ω–∏–∫–∞': { ky: '–ú–µ—Ö–∞–Ω–∏–∫–∞–ª—ã–∫', en: 'Manual' },
            '–ê–≤—Ç–æ–º–∞—Ç': { ky: '–ê–≤—Ç–æ–º–∞—Ç—Ç—ã–∫', en: 'Automatic' }
        };

        // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –≤–≤–æ–¥–µ RU
        $(document).on('blur', 'input[name*="value_ru"]', function() {
            const $row = $(this).closest('tr');
            const ruValue = $(this).val().trim();
            
            if (!ruValue) return;
            
            const $kyInput = $row.find('input[name*="value_ky"]');
            const $enInput = $row.find('input[name*="value_en"]');
            
            // –ï—Å–ª–∏ –ø–æ–ª—è –ø—É—Å—Ç—ã–µ - –∑–∞–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            if (!$kyInput.val() || !$enInput.val()) {
                let kyValue = ruValue;
                let enValue = ruValue;
                
                Object.keys(translations).forEach(ruTerm => {
                    if (ruValue.includes(ruTerm)) {
                        const translated = translations[ruTerm];
                        kyValue = kyValue.replace(ruTerm, translated.ky);
                        enValue = enValue.replace(ruTerm, translated.en);
                    }
                });
                
                if (!$kyInput.val()) {
                    $kyInput.val(kyValue);
                    console.log('‚úÖ –ê–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥ KY:', kyValue);
                }
                if (!$enInput.val()) {
                    $enInput.val(enValue);
                    console.log('‚úÖ –ê–≤—Ç–æ–ø–µ—Ä–µ–≤–æ–¥ EN:', enValue);
                }
            }
        });

        // ============================================
        // 2. –í–´–ë–û–† –ò–ö–û–ù–û–ö
        // ============================================
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        initIconSelectors();
        
        // –°–ª–µ–¥–∏–º –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫
        $(document).on('click', '.add-row a', function() {
            setTimeout(function() {
                console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞');
                initIconSelectors();
            }, 500);
        });
        
        function initIconSelectors() {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            $(document).off('click', '.icon-card').on('click', '.icon-card', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                const $card = $(this);
                const templateId = $card.data('template-id');
                const iconUrl = $card.data('icon-url');
                const iconName = $card.find('small').text();
                
                // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é —Å—Ç—Ä–æ–∫—É
                const $row = $card.closest('tr.form-row');
                if (!$row.length) {
                    console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ñ–æ—Ä–º—ã');
                    return;
                }
                
                // –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏
                const $table = $row.closest('table');
                const $allRows = $table.find('tbody tr.form-row');
                const rowIndex = $allRows.index($row);
                
                console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ:', iconName, '—Å—Ç—Ä–æ–∫–∞:', rowIndex, 'ID:', templateId);
                
                // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ
                const fieldName = 'card_specs-' + rowIndex + '-selected_template';
                let $hiddenInput = $row.find('input[name="' + fieldName + '"]');
                
                if ($hiddenInput.length === 0) {
                    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ
                    $hiddenInput = $('<input>', {
                        type: 'hidden',
                        name: fieldName,
                        id: 'id_' + fieldName,
                        class: 'selected-template-field'
                    });
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é —è—á–µ–π–∫—É —Å—Ç—Ä–æ–∫–∏
                    $row.find('td').last().append($hiddenInput);
                    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ:', fieldName);
                } else {
                    console.log('üîÑ –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', fieldName);
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                $hiddenInput.val(templateId);
                console.log('üíæ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', fieldName, '=', templateId);
                
                // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                $row.find('.icon-card').css({
                    'border': '2px solid #ddd',
                    'background': '#fff',
                    'transform': 'scale(1)'
                });
                
                $card.css({
                    'border': '3px solid #2e7d32',
                    'background': '#e8f5e9',
                    'transform': 'scale(1.05)'
                });
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
                const $preview = $row.find('td:nth-child(2) img');
                if ($preview.length) {
                    $preview.attr('src', iconUrl).css({
                        'border': '2px solid #2e7d32',
                        'border-radius': '8px'
                    });
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                const $info = $row.find('.selected-icon-info');
                if ($info.length) {
                    $info.find('.icon-name').text(iconName);
                    $info.show();
                }
                
                console.log('‚úÖ –ò–∫–æ–Ω–∫–∞ –≤—ã–±—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            });
        }

        // ============================================
        // 3. –í–ê–õ–ò–î–ê–¶–ò–Ø JSON
        // ============================================
        $('textarea[name^="specs"]').each(function() {
            const $textarea = $(this);
            const $validateBtn = $('<button>', {
                type: 'button',
                class: 'button',
                text: '‚úì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å JSON',
                css: { 'margin-left': '10px' }
            });
            
            $validateBtn.on('click', function() {
                try {
                    const json = JSON.parse($textarea.val());
                    alert('‚úÖ JSON –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!\n\n–ö–ª—é—á–µ–π: ' + Object.keys(json).length);
                } catch (e) {
                    alert('‚ùå –û—à–∏–±–∫–∞ –≤ JSON:\n\n' + e.message);
                }
            });
            
            $textarea.after($validateBtn);
        });
        
        console.log('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    });
})();